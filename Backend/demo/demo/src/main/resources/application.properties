
#By turning this off, we make sure that Spring banner which is a useless thing is not printed in the logs
spring.main.banner-mode=off

spring.application.name=demo

#The port on which the backend will run
server.port=8080



#MongoDB connection URL
spring.data.mongodb.uri=mongodb://localhost:27017/fanfictionDb


#Swagger connection URL
springdoc.swagger-ui.path=/doc

#Actuator endpoints
management.endpoints.web.exposure.include=*

#Sping boot specificall enables prometheus
management.endpoint.prometheus.enabled=true

#spring.profiles.active=dev

#The port number on which spring boot dev tools in running
spring.devtools.livereload.port=35729  



# MySQL Connection
spring.datasource.url=jdbc:mysql://localhost:3306/fanfictiondb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#useSSL=false means to disable SSL encryption for the connection between spring boot app and mysql
#serverTimezone=UTC
#allowPublicKeyRetrieval=true

#Password of MySQL
spring.datasource.username=root
#Password of MySQL Database
spring.datasource.password=admin

# JPA / Hibernate

# The property being set to update means that JPA will automatically create tables based on Java classes
spring.jpa.hibernate.ddl-auto=update


#When set to true, JPA will output all logs related to SQL in the console or your configured output
spring.jpa.show-sql=true


#It tells SQL to tell which dialect to use when generating queryies for the database 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#BulkHead Configuration
#Maximum threads that can happen in a function
resilience4j.bulkhead.instances.myServiceBulkhead.maxConcurrentCalls=5
#Maximum number of times a function call will wait before being rejected or going to the fallback method
resilience4j.bulkhead.instances.myServiceBulkhead.maxWaitDuration=2s


#The ReTry Methods
#There will be a maximum of 3 attempts to get the API to work:: Initial + 2 more
resilience4j.retry.instances.paymentServiceRetry.maxAttempts=3

#Wait between Retries
resilience4j.retry.instances.paymentServiceRetry.waitDuration=2s

resilience4j.retry.instances.paymentServiceRetry.retryExceptions=java.lang.RuntimeException

# The maximum number of connections that can be in the pool. Default is 10.
spring.datasource.hikari.maximum-pool-size=20

# The minimum number of idle connections that HikariCP tries to maintain.
spring.datasource.hikari.minimum-idle=5

# The maximum time (in milliseconds) that a connection is allowed to sit idle in the pool.
spring.datasource.hikari.idle-timeout=30000

# The maximum time (in milliseconds) that a client will wait for a connection from the pool.
spring.datasource.hikari.connection-timeout=20000

# The maximum lifetime of a connection in the pool (in milliseconds).
spring.datasource.hikari.max-lifetime=1800000

#Property added to enable both swagger and GraphQL
spring.main.allow-bean-definition-overriding=true
