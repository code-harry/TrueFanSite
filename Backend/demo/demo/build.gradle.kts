/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.spring.io/milestone")
    }

    maven {
        url = uri("https://repo.spring.io/snapshot")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api(libs.org.springframework.boot.spring.boot.starter.web)
    api(libs.org.springframework.boot.spring.boot.starter.data.mongodb)
    api(libs.com.fasterxml.jackson.dataformat.jackson.dataformat.xml)
    api(libs.com.example.checkingforcustommavenrepository)
    api(libs.org.springdoc.springdoc.openapi.starter.webmvc.ui)
    api(libs.org.springframework.boot.spring.boot.starter.security)
    api(libs.com.github.ulisesbocchio.jasypt.spring.boot.starter)
    api(libs.org.springframework.security.spring.security.core)
    api(libs.org.springframework.boot.spring.boot.starter.aop)
    api(libs.io.jsonwebtoken.jjwt.api)
    api(libs.org.springframework.boot.spring.boot.starter.validation)
    api(libs.org.springframework.boot.spring.boot.starter.actuator)
    api(libs.com.bucket4j.bucket4j.core)
    api(libs.org.springframework.boot.spring.boot.starter.cache)
    api(libs.com.github.ben.manes.caffeine.caffeine)
    api(libs.com.graphql.java.kickstart.graphql.spring.boot.starter)
    api(libs.com.graphql.java.kickstart.graphiql.spring.boot.starter)
    api(libs.org.projectlombok.lombok)
    runtimeOnly(libs.org.springframework.boot.spring.boot.devtools)
    runtimeOnly(libs.io.jsonwebtoken.jjwt.impl)
    runtimeOnly(libs.io.jsonwebtoken.jjwt.jackson)
    testImplementation(libs.org.springframework.boot.spring.boot.starter.test)
    testImplementation(libs.junit.junit)
}

group = "com.example"
version = "0.0.1-SNAPSHOT"
description = "demo"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
